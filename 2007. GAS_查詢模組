/**
 * 查詢模組
 * 版本: 1.0.0
 * 作者: AustinLiao69
 */

// 1. 定義全域變數
var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
var querySheetName = "查詢結果";
var historySheetName = "查詢歷史";

// 2. 數據查詢
function 數據查詢_1_0_0_AustinLiao69(queryConditions) {
  console.log("Debug: 進入函數 數據查詢_1_0_0_AustinLiao69");
  
  var sheet = spreadsheet.getSheetByName(querySheetName);
  var data = sheet.getDataRange().getValues();
  var filteredData = data.filter(function(row) {
    // 假設根據日期範圍、類別和金額進行查詢
    return row[0] >= queryConditions.startDate && row[0] <= queryConditions.endDate &&
           row[1] === queryConditions.category &&
           row[2] >= queryConditions.minAmount && row[2] <= queryConditions.maxAmount;
  });
  
  console.log("Debug: 查詢結果: ", filteredData);
  return filteredData;
}

// 3. 查詢結果導出
function 查詢結果導出_1_0_0_AustinLiao69(queryConditions, exportFormat) {
  console.log("Debug: 進入函數 查詢結果導出_1_0_0_AustinLiao69");
  
  var results = 數據查詢_1_0_0_AustinLiao69(queryConditions);
  var exportSheetName = "查詢結果_" + new Date().toISOString();
  var exportSheet = spreadsheet.insertSheet(exportSheetName);
  
  exportSheet.getRange(1, 1, results.length, results[0].length).setValues(results);
  
  if (exportFormat === 'CSV') {
    // 將查詢結果導出為CSV文件
    var csvContent = results.map(function(row) {
      return row.join(",");
    }).join("\n");
    var blob = Utilities.newBlob(csvContent, "text/csv", exportSheetName + ".csv");
    DriveApp.createFile(blob);
  } else if (exportFormat === 'Excel') {
    // 將查詢結果導出為Excel文件
    var xlsxBlob = exportSheet.getAs('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
    xlsxBlob.setName(exportSheetName + ".xlsx");
    DriveApp.createFile(xlsxBlob);
  }
  
  console.log("Debug: 查詢結果導出完成");
}

// 4. 查詢歷史
function 記錄查詢歷史_1_0_0_AustinLiao69(queryConditions, results) {
  console.log("Debug: 進入函數 記錄查詢歷史_1_0_0_AustinLiao69");
  
  var sheet = spreadsheet.getSheetByName(historySheetName);
  sheet.appendRow([new Date(), JSON.stringify(queryConditions), JSON.stringify(results)]);
  
  console.log("Debug: 查詢歷史已記錄");
}

// 5. 錯誤處理與重試機制
function 錯誤處理與重試機制_1_0_0_AustinLiao69(operation, data) {
  console.log("Debug: 進入函數 錯誤處理與重試機制_1_0_0_AustinLiao69");
  
  var maxRetries = 3;
  for (var i = 0; i < maxRetries; i++) {
    try {
      operation(data);
      console.log("Debug: 操作成功");
      break;
    } catch (error) {
      console.error("Debug: 操作失敗，次數: ", i + 1, " 錯誤: ", error);
    }
  }
}
