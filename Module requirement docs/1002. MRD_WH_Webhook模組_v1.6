MRD_Webhook模組_v1.9

1.0 模組概述（Module Overview）

Webhook 模組的主要用途是接收來自 LINE Messaging API 的 Webhook 事件，並將這些事件轉發至資料分配模組（DD）進行後續處理。

該模組負責以下功能：

接收 Webhook 事件：即時監聽並處理來自 LINE 用戶的輸入訊息。

驗證請求：確保數據來源為 LINE，防止惡意攻擊。

轉發處理請求：將用戶輸入的數據傳送至資料分配模組（DD）進行分類與分發。


Webhook 模組是數據處理流程的觸發點，確保用戶輸入能即時且準確地傳遞至 DD 進行處理。


---

2.0 功能需求（Functional Requirements）

2.1 接收 Webhook 事件

監聽來自 LINE Messaging API 的 Webhook 事件，處理訊息類型的請求。


2.2 驗證 Webhook 請求

驗證請求的合法性，確保來源為 LINE，防止惡意請求。


2.3 轉發訊息至資料分配模組（DD）

將用戶輸入的數據封裝後，轉發至資料分配模組（DD），由 DD 進行分類與分發。


2.4 回應 LINE API

處理完成後，向 LINE API 回應 200 OK，確保請求順利執行。



---

3.0 資料欄位

Webhook 模組處理的主要欄位包括：

event_type：事件類型，例如 message。

user_id：LINE 用戶的 ID。

timestamp：訊息的時間戳記。

original_text：用戶輸入的原始內容，例如「中餐 120」。



---

4.0 輸入/輸出規格（Input & Output Specifications）

4.1 Webhook 請求（輸入）

Webhook 模組會接收來自 LINE Messaging API 的請求，範例如下：

{
  "event_type": "message",
  "user_id": "U1234567890",
  "timestamp": "2025-03-27T12:34:56Z",
  "message": "中餐 120"
}

4.2 轉發至資料分配模組（輸出）

當用戶輸入的數據被接收後，Webhook 模組會傳送標準數據格式至資料分配模組（DD），範例如下：

{
  "event_type": "message",
  "user_id": "U1234567890",
  "timestamp": "2025-03-27T12:34:56Z",
  "original_text": "中餐 120",
  "source": "LINE"
}


---

5.0 錯誤處理與例外狀況（Error Handling & Edge Cases）

Webhook 模組應處理以下錯誤情況：

無效請求：若請求來源非 LINE API，則回應 403 Forbidden，並記錄錯誤日誌。

數據解析錯誤：若無法從訊息中提取有效數據，則回應 400 Bad Request，並要求用戶重新輸入。

資料分配模組（DD）無回應：若 DD 發生錯誤，則記錄錯誤並重試傳送請求（最多 3 次）。



---

6.0 測試計畫（Test Plan）

Webhook 模組的測試項目包括：

1. Webhook 事件接收：測試 Webhook 是否能成功接收來自 LINE API 的事件。


2. 請求驗證：測試是否能阻擋非 LINE API 來源的非法請求。


3. 訊息轉發測試：測試不同類型的輸入格式，確保能正確轉發至資料分配模組（DD）。


4. 異常狀況處理：測試 DD 無回應時的錯誤處理機制，確保系統能記錄錯誤並重試請求。




---

