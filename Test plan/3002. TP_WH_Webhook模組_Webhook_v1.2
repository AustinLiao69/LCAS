# TP_WH_v1.2

## 1. 測試範圍
本測試計畫針對 Webhook 模組（WH）進行單元測試，確保其核心功能正常運作，包含：
- 接收 Webhook 事件：測試 WH 是否能正確接收來自 LINE Messaging API 的 Webhook 事件。
- 請求驗證：確保 WH 只接受來自 LINE API 的合法請求，並拒絕無效請求。
- 訊息轉發至資料分配模組（DD）：確保 WH 能正確封裝並轉發訊息給 DD。
- 錯誤處理機制：測試 WH 在 DD 無回應或數據解析錯誤時的行為。
- 回應 LINE API：確保 WH 能正確回應 200 OK，並在錯誤發生時回應適當的 HTTP 狀態碼。

## 2. 測試案例（Test Cases）

### TC-001 測試 Webhook 事件接收
- 測試目標：WH 是否能接收來自 LINE Webhook 並解析數據。
- 預期結果：WH 成功解析 Webhook 事件。

### TC-002 測試請求驗證
- 測試目標：WH 是否能拒絕來自非 LINE API 的請求。
- 預期結果：非 LINE 來源請求回應 403 Forbidden。

### TC-003 測試訊息轉發
- 測試目標：WH 是否能將解析後的訊息正確轉發給 DD。
- 預期結果：WH 成功轉發數據至 DD，並回應 200 OK。

### TC-004 測試 DD 無回應時的行為
- 測試目標：DD 無回應時 WH 是否會重試 3 次。
- 預期結果：WH 在 3 次重試後記錄錯誤並回應 500。

### TC-005 測試解析錯誤
- 測試目標：當收到無效數據時，WH 是否能正確回應錯誤。
- 預期結果：WH 回應 400 Bad Request。

### TC-006 測試正常回應
- 測試目標：WH 在成功處理請求後，是否能回應 LINE 200 OK。
- 預期結果：WH 正確回應 200 OK。

## 3. 測試方法
- **單元測試（Unit Test）**：透過模擬 LINE Webhook 事件，驗證 WH 各功能的正確性。
- **API 測試（API Testing）**：使用 Postman 或 Curl 發送模擬 Webhook 請求，檢查 WH 的請求驗證、訊息轉發及回應狀態。
- **錯誤測試（Error Handling Test）**：測試 WH 在無效數據、DD 無回應等異常情境下的處理方式。

## 4. 測試步驟

### 測試 Webhook 事件接收
1. 使用 Postman 或 Curl 發送模擬 Webhook 事件。
2. 確認 WH 是否成功接收並解析數據。
3. 檢查 WH 日誌，確保數據格式正確，並根據日誌檢查是否出現任何異常。

### 測試請求驗證
1. 發送來自非 LINE API 的請求（如手動修改 Header）。
2. 確保 WH 回應 403 Forbidden，並記錄錯誤日誌。

### 測試訊息轉發
1. 發送模擬 Webhook 事件（如 message）。
2. 檢查 WH 是否成功轉發數據至 DD API。
3. 確認 DD 收到數據，且格式符合 MRD 定義。
4. 驗證 DD 模組正確處理訊息後的結果。

### 測試 DD 無回應時的行為
1. 發送模擬 Webhook 事件，但 DD API 不回應。
2. 確保 WH 重試最多 3 次。
3. 確認 WH 在 3 次失敗後記錄錯誤並回應 500 Internal Server Error。

### 測試數據解析錯誤
1. 發送不完整或無效的 Webhook JSON。
2. 確保 WH 回應 400 Bad Request，並記錄錯誤日誌。

### 測試 WH 的 LINE API 回應
1. 發送正確的 Webhook 事件。
2. 確認 WH 成功處理並回應 200 OK。
3. 在錯誤情境下（如 DD 無回應），確保 WH 回應適當的錯誤狀態碼。
